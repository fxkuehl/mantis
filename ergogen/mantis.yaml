units:
  # Hex key spacing
  hx: 21.5
  hy: 18.62
  # Margin around the PCB
  mx: 3
  my: 1.1547mx
  # Distance between key clusters
  dx: 3.27
  dy: 1.1547dx
  # Space around keys and fillet radius
  kx: 0.54/2
  ky: 1.1547kx
  fk: 3
  # Space around raised PCB and fillet radius
  rx: kx
  ry: 1.1547rx
  # Trackball diameter
  d_ball: 34
  # MCU vertical offset
  mcu_top: hy/3 + dy/2

points:
  zones:
    # Just key positions for reference, without any rotation
    # Origin aligns the center/split line with both inch and mm rasters
    f:
      anchor:
        shift: [254-10hx/2-dx/2, -127+2hy]
      columns:
        c0:
          rows:
            r0: $unset
            r1: $unset
            r2:
              shift: [0]
        c1:
          rows:
            r0: $unset
          key:
            stagger: -hy
            spread: hx/2
        c2:
          rows:
            r0: $unset
        c3:
          rows:
            r1:
              shift: [hx/2]
          key:
            stagger: -hy
            spread: hx/2
        c4:
          rows:
            r0: $unset
        c5:
          rows:
            r0: $unset
            r1: $unset
            r2:
              shift: [0]
      rows:
        r0:
        r1:
        r2:
          shift: [hx/2]
        r3:
          shift: [hx/2]
    t:
      anchor:
        shift: [254-5hx/2-dx/2, -127-hy-dy]
      columns:
        c1:
        c2:
        c3:
          key:
            stagger: -hy
            spread: hx/2
      rows:
        r1:

    # This section defines the switch matrix. It's a little unintuitive
    # to minimize the number of column pins between top and bottom PCBs.
    # Keys are rotated in 60Â° increments to make a simulated key well
    # with sculpted key caps. Define each row in its own zone to make
    # the key rotation easier. Otherwise the spread and stagger get very
    # confusing.
    z3:
      anchor:
        ref: f_c0_r3
      columns:
        c1:
          rows.r3.rotate: 0
          key:
            column_net: C1
            mirror.column_net: M_C1
        c2:
          key:
            column_net: C2
            mirror.column_net: M_C2
        c3:
          key:
            spread: 2hx
            column_net: C3
            mirror.column_net: M_C3
        c4:
          key:
            spread: hx/2
            stagger: -hy
            column_net: C4
            mirror.column_net: M_C4
        c5:
          key:
            spread: hx/2
            stagger: -hy
            column_net: C5
            mirror.column_net: M_C5
      rows:
        r3:
          row_net: R3
          rotate: -60
    z2:
      anchor:
        ref: f_c0_r2
      columns:
        c1:
          rows.r2.rotate: 120
          key:
            column_net: C1
            mirror.column_net: M_C1
        c2:
          rows.r2.rotate: -60
          key:
            spread: 2.5hx
            stagger: hy
            column_net: C2
            mirror.column_net: M_C2
        c3:
          key:
            spread: hx/2
            stagger: -hy
            column_net: C3
            mirror.column_net: M_C3
        c4:
          key:
            spread: hx/2
            stagger: -hy
            column_net: C4
            mirror.column_net: M_C4
        c5:
          #rows.r2.rotate: 180
          key:
            spread: hx/2
            stagger: -hy
            column_net: C5
            mirror.column_net: M_C5
      rows:
        r2:
          row_net: R2
          rotate: -120
    z1:
      anchor:
        ref: f_c1_r2
      columns:
        c1:
          rows.r1.rotate: -120
          key:
            column_net: C1
            mirror.column_net: M_C1
        c2:
          rows.r1.rotate: -120
          key:
            column_net: C2
            mirror.column_net: M_C2
        c3:
          key:
            spread: hx/2
            stagger: -hy
            column_net: C3
            mirror.column_net: M_C3
        c4:
          key:
            spread: hx/2
            stagger: -hy
            column_net: C4
            mirror.column_net: M_C4
        c5:
          rows.r1.rotate: 0
          key:
            spread: hx/2
            stagger: -hy-dy
            column_net: C5
            mirror.column_net: M_C5
      rows:
        r1:
          row_net: R1
          rotate: 180
    z0:
      anchor:
        ref: f_c1_r1
      columns:
        c1:
          rows.r0.rotate: 180
          key:
            column_net: C1
            mirror.column_net: M_C1
        c2:
          rows.r0.rotate: 180
          key:
            column_net: C2
            mirror.column_net: M_C2
        c3:
          rows.r0.rotate: 180
          key:
            spread: hx/2
            stagger: -hy
            column_net: C3
            mirror.column_net: M_C3
        c4:
          rows.r0.rotate: 60
          key:
            spread: hx/2
            stagger: -hy-dy
            column_net: C4
            mirror.column_net: M_C4
        c5:
          rows.r0.rotate: 0
          key:
            spread: 1.5hx
            stagger: -hy
            column_net: C5
            mirror.column_net: M_C5
      rows:
        r0:
          row_net: R0
          rotate: 180
  key:
    spread: hx
    padding: hy
  mirror:
    ref: f_c5_r3
    distance: hx+dx

outlines:
  _main_template:
    $params: [mx, my]
    # All points of the main outline are relative to non-rotated
    # keys to keep it sane.
    poly:
      what: polygon
      points:
        - ref: t_c3_r1
          shift: [0, -2hy/3-my]
        - ref: t_c3_r1
          shift: [-2hx-mx, 2hy/3-my/2]
        - ref: t_c3_r1
          shift: [-2hx-mx, 4hy/3+dy-my/2]
        - ref: f_c0_r2
          shift: [-hx/2-mx, -hy-my/2]
        - ref: f_c0_r2
          shift: [-hx/2-mx, hy+my/2]
        - ref: f_c0_r3
          shift: [hx/2, hy+my]
        - ref: f_c0_r3
          shift: [3hx/2, hy/3+my]
        - ref: f_c0_r3
          shift: [5hx/2, hy+my]

        - ref: f_c0_r3
          shift: [9hx/2+dx/2, my-dy/4-hy/3]

        - ref: mirror_f_c0_r3
          shift: [5hx/2, hy+my]
        - ref: mirror_f_c0_r3
          shift: [3hx/2, hy/3+my]
        - ref: mirror_f_c0_r3
          shift: [hx/2, hy+my]
        - ref: mirror_f_c0_r2
          shift: [-hx/2-mx, hy+my/2]
        - ref: mirror_f_c0_r2
          shift: [-hx/2-mx, -hy-my/2]
        - ref: mirror_t_c3_r1
          shift: [-2hx-mx, 4hy/3+dy-my/2]
        - ref: mirror_t_c3_r1
          shift: [-2hx-mx, 2hy/3-my/2]
        - ref: mirror_t_c3_r1
          shift: [0, -2hy/3-my]

        - ref: t_c3_r1
          shift: [hx+dx/2, -my+dy/4]
    mcu_fill:
      what: rectangle
      where:
        ref: f_c0_r3
        shift: [9hx/2+dx/2, mcu_top-4hy/3 + mx+kx]
      size: [4hx+dx, 8hy/3]
      operation: add
      fillet: mx+kx+fk
  _main_internal:
    $extends: outlines._main_template
    $args: [-kx, -ky]
  main_padded:
    $extends: outlines._main_template
    $args: [kx, ky]
  main_external:
    $extends: outlines._main_template
    $args: [mx, my]
  _raised_template:
    $params: [rx, ry]
    poly:
      what: polygon
      points:
        - ref: t_c3_r1
          shift: [hx+dx/2, -dy/4+ry]
        - shift: [-hx-dx/2, 2hy/3+dy/4]
        - shift: [-hx, -2hy/3]
        - shift: [-hx+rx, 2hy/3-ry/2]
        - shift: [0, 2hy/3-ry]
        - shift: [hx/2, hy/3]
        - shift: [0, 2hy/3+dy]
        - shift: [hx/2, hy/3]
        - shift: [0, 2hy/3]
        - shift: [hx/2, hy/3]
        - shift: [0, 2hy/3]

        # Extended center to mount controller
        - shift: [hx/2, hy/3]
        - shift: [0, hy/3+ry/2-rx+mcu_top]
        - shift: [2hx+dx-2(rx), 0]
        - shift: [0, -hy/3-ry/2+rx-mcu_top]
        - shift: [hx/2, -hy/3]

        # Fitted center for controller on the main PCB
        #- shift: [hx/2-rx, hy/3-ry/2]
        #- shift: [hx/2-rx, -hy/3+ry/2]
        #- shift: [0, -2hy/3]
        #- shift: [hx/2+dx/2+rx, -hy/3-dy/4-ry/2]

        #- shift: [hx/2+dx/2+rx, hy/3+dy/4+ry/2]
        #- shift: [0, 2hy/3]
        #- shift: [hx/2-rx, hy/3-ry/2]
        #- shift: [hx/2-rx, -hy/3+ry/2]
        # End center

        - shift: [0, -2hy/3]
        - shift: [hx/2, -hy/3]
        - shift: [0, -2hy/3]
        - shift: [hx/2, -hy/3]
        - shift: [0, -2hy/3-dy]
        - shift: [hx/2, -hy/3]
        - shift: [0, -2hy/3+ry]
        - shift: [-hx+rx, -2hy/3+ry/2]
        - shift: [-hx, 2hy/3]
      fillet: fk+kx-rx
  _raised:
    $extends: outlines._raised_template
    $args: [kx, ky]
  raised_padded:
    $extends: outlines._raised_template
    $args: [-kx, -ky]

  _hexagon_template:
    $params: [kx, ky]
    poly:
      what: polygon
      points:
        - shift: [-hx/2+(kx), -hy/3+(ky)/2]
        - shift: [0, 2.0hy/3-(ky)]
        - shift: [hx/2-(kx), hy/3-(ky)/2]
        - shift: [hx/2-(kx), -hy/3+(ky)/2]
        - shift: [0, -2.0hy/3+(ky)]
        - shift: [-hx/2+(kx), -hy/3+(ky)/2]
  _key_hexagon:
    $extends: outlines._hexagon_template
    $args: [kx, ky]
  _nibble_hexagon:
    $extends: outlines._hexagon_template
    $args: [-kx, -ky]
  _hole_hexagon:
    $extends: outlines._hexagon_template
    $args: [mx, my]
  _rounded_nibble:
    - what: outline
      name: _nibble_hexagon
      fillet: fk+2kx
  _hexkey:
    - what: outline
      name: _key_hexagon
      fillet: fk
    - what: circle
      radius: 7
      where:
        shift: [0, -2]
      operation: stack
  _m2_nut:
    - what: polygon
      points:
        - shift: [-2.0, -1.155]
        - shift: [0, 2.31]
        - shift: [2.0, 1.155]
        - shift: [2.0, -1.155]
        - shift: [0, -2.31]
        - shift: [-2.0, -1.155]
      fillet: .6
  _rgb_cutout:
    - what: rectangle
      where:
        shift: [0, 4.7]
      size: [3.2, 3.2]
      fillet: 0.4
  _switch_cutout1:
    - what: rectangle
      size: [13.8, 13.8]
      fillet: 0.6
  _mcu_cutout:
    - what: rectangle
      size: [17.78 + 1, 33.02 + 1]
      where:
        ref: f_c0_r3
        shift: [9hx/2+dx/2, mcu_top-16.51]
      fillet: 0.5
  _main_cutouts:
    - what: outline
      name: _mcu_cutout
  _trackball:
    - what: circle
      where:
        ref: t_c2_r1
        shift: [1.5hx + dx/2, -dy/2]
      radius: d_ball/2
  _trackball_cutout:
    - what: circle
      where:
        ref: t_c2_r1
        shift: [1.5hx + dx/2, -dy/2]
      radius: d_ball/2 + 2kx

  raised_external:
    - what: polygon
      points:
        - ref: t_c3_r1
          shift: [hx+dx/2, -dy/4-my]
        - shift: [-hx-dx/2, 2hy/3+dy/4]
        - shift: [-hx, -2hy/3]
        - shift: [-hx-mx, 2hy/3+my/2]
        - shift: [0, 2hy/3+my]
        - shift: [2hx/2, 2hy/3]

        - shift: [4hx+dx+2mx, 0]

        - shift: [2hx/2, -2hy/3]
        - shift: [0, -2hy/3-my]
        - shift: [-hx-mx, -2hy/3-my/2]
        - shift: [-hx, 2hy/3]
      operation: add
    - what: rectangle
      size: [2hx+dx+2mx, 2(mx+kx)+hy]
      where:
        ref: f_c3_r3
        shift: [1.5hx+dx/2, mcu_top-hy/2]
      operation: add
      fillet: mx+kx+fk
    - what: outline
      name: _raised
      operation: add
      fillet: kx+fk-rx
    - what: outline
      name: _rounded_nibble
      where: [z0_c5_r0, z3_c3_r3]
      asym: both
      operation: subtract
      fillet: my/2
  main_key_slots:
    - what: outline
      name: _nibble_hexagon
      where: [z3_c1_r3, z3_c2_r3, z3_c3_r3,
              z2_c1_r2, z2_c2_r2, z2_c3_r2,
              z1_c1_r1, z1_c2_r1, z1_c3_r1,
              z0_c1_r0, z0_c2_r0, z0_c3_r0, z0_c5_r0]
      asym: both
      fillet: fk+2kx
  _deck_holes:
    - what: outline
      name: _hole_hexagon
      where: [f_c4_r3, f_c5_r3,
              f_c4_r2, f_c5_r2,
              f_c4_r1]
      adjust:
        shift: [dx/2, -dy/2]
      asym: both
    - what: outline
      name: _hole_hexagon
      where: [t_c2_r1, t_c1_r1]
      adjust:
        shift: [dx/2, dy/2]
      asym: both
      fillet: 2
      operation: add

  main_pcb:
    - what: outline
      name: _main_internal
    - what: outline
      name: _nibble_hexagon
      where: [f_c1_r3, f_c3_r3, f_c0_r2]
      asym: both
      adjust:
        shift: [-hx/2, hy]
      operation: subtract
    - what: outline
      name: _nibble_hexagon
      where: [f_c1_r1, f_c3_r0, t_c3_r1]
      asym: both
      adjust:
        shift: [-hx, 0]
      operation: subtract
      fillet: fk
    - what: outline
      name: _rgb_cutout
      where: [z3_c1_r3, z3_c2_r3, z3_c3_r3,
              z2_c1_r2, z2_c2_r2, z2_c3_r2,
              z1_c1_r1, z1_c2_r1, z1_c3_r1,
              z0_c1_r0, z0_c2_r0, z0_c3_r0, z0_c5_r0]
      asym: both
      operation: subtract
  _main_deck:
    - what: outline
      name: main_external
    - what: outline
      name: _nibble_hexagon
      where: [z3_c1_r3, z3_c2_r3, z3_c3_r3,
              z2_c1_r2, z2_c2_r2, z2_c3_r2,
              z1_c1_r1, z1_c2_r1, z1_c3_r1,
              z0_c1_r0, z0_c2_r0, z0_c3_r0, z0_c5_r0]
      asym: both
      fillet: fk+2kx
      operation: subtract
    - what: outline
      name: raised_padded
      operation: subtract
    #- what: outline
    #  name: _deck_holes
    #  operation: subtract
    #- what: outline
    #  name: _trackball_cutout
    #  operation: subtract
    - what: outline
      name: _mcu_cutout
      operation: subtract
  main_plate:
    - what: outline
      name: _main_internal
    - what: outline
      name: _switch_cutout1
      where: [z3_c1_r3, z3_c2_r3, z3_c3_r3,
              z2_c1_r2, z2_c2_r2, z2_c3_r2,
              z1_c1_r1, z1_c2_r1, z1_c3_r1,
              z0_c1_r0, z0_c2_r0, z0_c3_r0, z0_c5_r0]
      asym: both
      operation: subtract
    - what: outline
      name: _deck_holes
      operation: subtract
    - what: outline
      name: _mcu_cutout
      operation: subtract
    - what: outline
      name: _trackball_cutout
      operation: subtract
  raised_pcb:
    - what: outline
      name: _raised
    - what: rectangle
      size: [3hx, 4hy/3+kx]
      where:
        ref: f_c0_r3
        shift: [9hx/2+dx/2, hy/3]
      operation: subtract
    - what: outline
      name: _nibble_hexagon
      where: [t_c3_r1]
      asym: both
      adjust:
        shift: [-hx, 0]
      operation: subtract
      fillet: fk
    - what: outline
      name: _rgb_cutout
      where: [z3_c4_r3, z3_c5_r3,
              z2_c4_r2, z2_c5_r2,
              z1_c4_r1, z1_c5_r1,
              z0_c4_r0]
      asym: both
      operation: subtract
    - what: outline
      name: _mcu_cutout
      operation: subtract
    - what: outline
      name: _trackball_cutout
      operation: subtract
  raised_key_slots:
    - what: outline
      name: _nibble_hexagon
      where: [z3_c3_r3, z3_c4_r3, z3_c5_r3,
              z2_c3_r2, z2_c4_r2, z2_c5_r2,
              z1_c3_r1, z1_c4_r1, z1_c5_r1,
              z0_c3_r0, z0_c4_r0, z0_c5_r0]
      asym: both
      fillet: fk+2kx
  _raised_deck:
    - what: outline
      name: raised_external
    - what: outline
      name: raised_key_slots
      operation: subtract
    - what: outline
      name: _trackball_cutout
      operation: subtract

  raised_plate:
    - what: outline
      name: _raised
    - what: outline
      name: _switch_cutout1
      where: [z3_c4_r3, z3_c5_r3,
              z2_c4_r2, z2_c5_r2,
              z1_c4_r1, z1_c5_r1,
              z0_c4_r0]
      asym: both
      operation: subtract
    - what: outline
      name: _mcu_cutout
      operation: subtract
    - what: outline
      name: _trackball_cutout
      operation: subtract

  composite_plates:
    - what: outline
      name: main_external
    - what: outline
      name: main_padded
      operation: stack
    - what: outline
      name: main_pcb
      operation: stack
    - what: outline
      name: main_plate
      adjust:
        shift: [0, 0.05]
      operation: stack
    - what: outline
      name: raised_pcb
      adjust:
        shift: [0, 0.07]
      operation: stack
    - what: outline
      name: raised_plate
      adjust:
        shift: [0, 0.1]
      operation: stack
  composite_shell:
    - what: outline
      name: _main_deck
    - what: outline
      name: _raised_deck
      operation: stack
      adjust:
        shift: [0, 0.05]
  composite_keys:
    - what: outline
      name: _main_deck
    - what: outline
      name: _raised
      operation: add
    - what: outline
      name: _raised_deck
      operation: stack
      adjust:
        shift: [0, 0.05]
    - what: outline
      name: _hexkey
      where: [z3_c1_r3, z3_c2_r3, z3_c3_r3, z3_c4_r3, z3_c5_r3,
              z2_c1_r2, z2_c2_r2, z2_c3_r2, z2_c4_r2, z2_c5_r2,
              z1_c1_r1, z1_c2_r1, z1_c3_r1, z1_c4_r1, z1_c5_r1,
              z0_c1_r0, z0_c2_r0, z0_c3_r0, z0_c4_r0, z0_c5_r0]
      asym: both
      operation: stack
      adjust:
        shift: [0, 0.05]
    - what: outline
      name: _trackball
      operation: stack

pcbs:
  plate_main:
    outlines:
      main:
        outline: main_plate

  plate_raised:
    outlines:
      main:
        outline: raised_plate

  mantis_main:
    outlines:
      main:
        outline: main_pcb
      raised:
        outline: _raised
        layer: Dwgs.User
    footprints:
      keys:
        what: choc
        where: [z3_c1_r3, z3_c2_r3, z3_c3_r3,
                z2_c1_r2, z2_c2_r2, z2_c3_r2,
                z1_c1_r1, z1_c2_r1, z1_c3_r1,
                z0_c1_r0, z0_c2_r0, z0_c3_r0, z0_c5_r0]
        asym: both
        adjust:
          rotate: 180
        params:
          from: "{{column_net}}"
          to: "{{colrow}}"
          keycaps: false
          hotswap: true
          reverse: false
      diodes:
        what: diode
        where: [z3_c1_r3, z3_c2_r3, z3_c3_r3,
                z2_c1_r2, z2_c2_r2, z2_c3_r2,
                z1_c1_r1, z1_c2_r1, z1_c3_r1,
                z0_c1_r0, z0_c2_r0, z0_c3_r0, z0_c5_r0]
        asym: both
        adjust:
          shift: [0, -3.5]
        params:
          from: "{{colrow}}"
          to: "{{row_net}}"
      rgb:
        what: rgb
        where: [z3_c1_r3, z3_c2_r3, z3_c3_r3,
                z2_c1_r2, z2_c2_r2, z2_c3_r2,
                z1_c1_r1, z1_c2_r1, z1_c3_r1,
                z0_c1_r0, z0_c2_r0, z0_c3_r0, z0_c5_r0]
        asym: both
        adjust.shift: [0, 4.7]
        params:
          side: B
          din: "di_{{colrow}}"
          dout: "do_{{colrow}}"

  mantis_raised:
    outlines:
      raised:
        outline: raised_pcb
    footprints:
      keys:
        what: choc
        where: [z3_c4_r3, z3_c5_r3,
                z2_c4_r2, z2_c5_r2,
                z1_c4_r1, z1_c5_r1,
                z0_c4_r0]
        asym: both
        adjust:
          rotate: 180
        params:
          from: "{{column_net}}"
          to: "{{colrow}}"
          keycaps: false
          hotswap: false
      diodes:
        what: diode
        where: [z3_c4_r3, z3_c5_r3,
                z2_c4_r2, z2_c5_r2,
                z1_c4_r1, z1_c5_r1,
                z0_c4_r0]
        asym: both
        adjust:
          shift: [0, -3.5]
        params:
          from: "{{colrow}}"
          to: "{{row_net}}"
      mcu:
        what: promicro
        where:
          ref: f_c0_r3
          shift: [9hx/2+dx/2, mcu_top - 17.78]
          rotate: -90
        params:
          orientation: up
          P0: R2
          P1: R3
          P2: R1
          P3: RT
          P4: C1
          P5: C2
          P6: C3
          P7: C4
          P8: C5
          P9: LED
          P14: M_C4
          P15: M_C3
          P16: M_C5
          P18: M_C2
          P19: M_C1
          RAW: VCC
          VCC: 3_3V
      reset:
        what: button
        where:
          ref: f_c0_r3
          shift: [9hx/2+dx/2, mcu_top-7]
        params:
          side: F
          from: GND
          to: RST
      rgb:
        what: rgb
        where: [z3_c4_r3, z3_c5_r3,
                z2_c4_r2, z2_c5_r2,
                z1_c4_r1, z1_c5_r1,
                z0_c4_r0]
        adjust.shift: [0, 4.7]
        asym: both
        params:
          side: B
          din: "di_{{colrow}}"
          dout: "do_{{colrow}}"

