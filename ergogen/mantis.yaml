units:
  # Hex key spacing
  hx: 21.5
  hy: 18.62
  # Margin around the PCB
  mx: 2
  my: 1.1547mx
  # Distance between key clusters
  dx: 3
  dy: 1.1547dx
  # Space around keys and fillet radius
  kx: 0.54/2
  ky: 1.1547kx
  fk: 3
  # Space around raised PCB and fillet radius
  rx: kx
  ry: 1.1547rx
  # Width of the sound channel and exit radius
  wc: 15.2
  # MCU vertical offset
  mcu_top: hy/3+2my
  # Gap between plates
  gap: 1

points:
  zones:
    # Just key positions for reference, without any rotation
    # Origin aligns the center/split line with both inch and mm rasters
    f:
      anchor:
        shift: [254-9hx/2-dx/2, -127+3hy]
      columns:
        c0:
          rows:
            r0: $unset
            r1: $unset
            r2: $unset
            r3:
              shift: [0]
        c1:
          rows:
            r0: $unset
          key:
            stagger: -2hy
            spread: 0
        c2:
          rows:
            r0: $unset
        c3:
          rows:
            r1:
              shift: [hx/2]
          key:
            stagger: -hy
            spread: hx/2
        c4:
          rows:
            r0: $unset
        c5:
          rows:
            r0: $unset
            r1: $unset
            r2:
              shift: [0]
      rows:
        r0:
        r1:
        r2:
          shift: [hx/2]
        r3:
          shift: [hx/2]
    t:
      anchor:
        shift: [254-5hx/2-dx/2, -127-hy-dy]
      columns:
        c1:
        c2:
        c3:
          rows:
            r1:
            r2:
              shift: [hx/2]
          key:
            stagger: -hy
            spread: hx/2
      rows:
        r1:

    # Positions for standoffs, mounting holes and headers
    mount:
      anchor:
        ref: f_c0_r3
      columns:
        base1:
          #rows.r.shift: [-hx+hx/4, -2hy]
          rows.r.shift: [-hx+hx/4, -3hy+hy/2]
        #base2:
        #  rows.r.shift: [hx+hx/8, -4hy+hy/4]
        base3:
          rows.r.shift: [hx/2, -hy/3]
        raise1:
          rows.r.shift: [2hx-9hx/32, -5hy-dy+7hy/16]
        raise2:
          rows.r.shift: [9hx/2+dx/2-4, -11hy/3]
        raise3:
          rows.r.shift: [4hx-hx/8, -hy/4]
        header:
          rows.r.shift: [9hx/2+dx/2, -3hy-dy/4+1.5]
      key:
        spread: 0

    # Keys are rotated in 60Â° increments to make a simulated key well
    # with sculpted key caps. Define each row in its own zone to make
    # the key rotation easier. Otherwise the spread and stagger get very
    # confusing. The matrix is a little unintuitive to minimize the
    # number of column pins between top and bottom PCBs.
    top:
      anchor:
        ref: f_c1_r3
      columns:
        c1:
          key:
            column_net: C1
            mirror.column_net: M_C1
        c2:
          key:
            column_net: C2
            mirror.column_net: M_C2
        c3:
          key:
            column_net: C3
            mirror.column_net: M_C3
        c4:
          key:
            spread: hx/2
            stagger: -hy
            column_net: C4
            mirror.column_net: M_C4
        c5:
          key:
            spread: hx/2
            stagger: -hy
            column_net: C5
            mirror.column_net: M_C5
      rows:
        r3:
          row_net: R3
          rotate: -60
    home:
      anchor:
        ref: f_c1_r2
      columns:
        c1:
          key:
            column_net: C1
            mirror.column_net: M_C1
        c2:
          key:
            column_net: C2
            mirror.column_net: M_C2
        c3:
          key:
            column_net: C3
            mirror.column_net: M_C3
        c4:
          key:
            spread: hx/2
            stagger: -hy
            column_net: C4
            mirror.column_net: M_C4
        c5:
          rows.r2:
            rotate: 180
          key:
            spread: hx/2
            stagger: -hy
            column_net: C5
            mirror.column_net: M_C5
      rows:
        r2:
          row_net: R2
          rotate: -120
    bottom:
      anchor:
        ref: f_c1_r1
      columns:
        c1:
          key:
            column_net: C1
            mirror.column_net: M_C1
        c2:
          key:
            column_net: C2
            mirror.column_net: M_C2
        c3:
          key:
            column_net: C3
            mirror.column_net: M_C3
        c4:
          key:
            spread: hx/2
            stagger: -hy
            column_net: C4
            mirror.column_net: M_C4
        c5:
          rows.r1:
            rotate: -60
          key:
            spread: 1.5hx
            stagger: -hy-dy
            column_net: C5
            mirror.column_net: M_C5
      rows:
        r1:
          row_net: R1
          rotate: 180
    thumb:
      anchor:
        ref: f_c0_r3
      columns:
        c1:
          key:
            column_net: C1
            mirror.column_net: M_C1
        c2:
          rows.rt:
            rotate: 180
          key:
            spread: 1.5hx
            stagger: -3hy
            column_net: C2
            mirror.column_net: M_C2
        c3:
          key:
            spread: 2hx
            stagger: -2hy-dy
            column_net: C3
            mirror.column_net: M_C3
        c4:
          rows.rt:
            rotate: 60
          key:
            spread: -1.5hx
            stagger: hy
            column_net: C4
            mirror.column_net: M_C4
        c5:
          key:
            column_net: C5
            mirror.column_net: M_C5
      rows:
        rt:
          row_net: RT
          rotate: 0
    extra:
      anchor:
        ref: f_c1_r2
        shift: [-hx, 0]
      columns:
        c1:
          rows.re:
            rotate: 120
          key:
            column_net: C1
            mirror.column_net: M_C1
        c2:
          rows.re:
            rotate: 180
          key:
            column_net: C1
            mirror.column_net: M_C1
            stagger: -2hy
        c3:
          rows.re:
            rotate: 60
          key:
            column_net: C1
            mirror.column_net: M_C1
            spread: 2hx
            stagger: -2hy-dy
      rows:
        re:
          row_net: RE
  key:
    spread: hx
    padding: hy
  mirror:
    ref: top_c5_r3
    distance: hx+dx

outlines:
  _main:
    # All points of the main outline are relative to non-rotated
    # keys to keep it sane.
    - what: polygon
      points:
        - ref: thumb_c3_rt
          shift: [-hx/2, -hy-my]
        - ref: thumb_c3_rt
          shift: [-2hx-mx, -my/2]
        - ref: thumb_c3_rt
          shift: [-2hx-mx, 2hy/3+dy-my/2]
        - ref: thumb_c1_rt
          shift: [-hx-mx, -8hy/3-my/2]
        - ref: thumb_c1_rt
          shift: [-hx-mx, my/2]
        - ref: thumb_c1_rt
          shift: [hx/2, hy+my]
        - ref: thumb_c1_rt
          shift: [3hx/2, hy/3+my]
        - ref: thumb_c1_rt
          shift: [5hx/2, hy+my]

        - ref: thumb_c1_rt
          shift: [9hx/2+dx/2, my-dy/4-hy/3]

        - ref: mirror_thumb_c1_rt
          shift: [5hx/2, hy+my]
        - ref: mirror_thumb_c1_rt
          shift: [3hx/2, hy/3+my]
        - ref: mirror_thumb_c1_rt
          shift: [hx/2, hy+my]
        - ref: mirror_thumb_c1_rt
          shift: [-hx-mx, my/2]
        - ref: mirror_thumb_c1_rt
          shift: [-hx-mx, -8hy/3-my/2]
        - ref: mirror_thumb_c3_rt
          shift: [-2hx-mx, 2hy/3+dy-my/2]
        - ref: mirror_thumb_c3_rt
          shift: [-2hx-mx, -my/2]
        - ref: mirror_thumb_c3_rt
          shift: [-hx/2, -hy-my]

        - ref: thumb_c3_rt
          shift: [hx+dx/2, -my+dy/4]
    - what: rectangle
      where:
        ref: thumb_c1_rt
        shift: [9hx/2+dx/2, mcu_top-4hy/3]
      size: [4hx+dx, 8hy/3]
      operation: add
      fillet: mx+kx+fk
  _raised:
    - what: polygon
      points:
        - ref: thumb_c3_rt
          shift: [hx+dx/2, -dy/4+ry]
        - shift: [-hx-dx/2, 2hy/3+dy/4]
        - shift: [-hx/2, -hy/3]
        - shift: [-hx/2,  hy/3]
        - shift: [-hx+rx, -2hy/3+ry/2]
        - shift: [0, 4hy/3-2ry]
#        - shift: [-hx/2, -hy/3]
#        - shift: [-hx/2+rx, hy/3-ry/2]
#        - shift: [0, 2hy/3-ry]
        - shift: [hx/2, hy/3]
        - shift: [0, 2hy/3+dy]
        - shift: [hx/2, hy/3]
        - shift: [0, 2hy/3]
        - shift: [hx/2, hy/3]
        - shift: [0, 2hy/3]

        # Extended center to mount controller
        - shift: [hx/2, hy/3]
        - shift: [0, hy/3+ry/2+mcu_top]
        - shift: [2hx+dx-2rx, 0]
        - shift: [0, -hy/3-ry/2-mcu_top]
        - shift: [hx/2, -hy/3]

        # Fitted center for controller on the main PCB
        #- shift: [hx/2-rx, hy/3-ry/2]
        #- shift: [hx/2-rx, -hy/3+ry/2]
        #- shift: [0, -2hy/3]
        #- shift: [hx/2+dx/2+rx, -hy/3-dy/4-ry/2]

        #- shift: [hx/2+dx/2+rx, hy/3+dy/4+ry/2]
        #- shift: [0, 2hy/3]
        #- shift: [hx/2-rx, hy/3-ry/2]
        #- shift: [hx/2-rx, -hy/3+ry/2]

        - shift: [0, -2hy/3]
        - shift: [hx/2, -hy/3]
        - shift: [0, -2hy/3]
        - shift: [hx/2, -hy/3]
        - shift: [0, -2hy/3-dy]
        - shift: [hx/2, -hy/3]
#        - shift: [0, -2hy/3+ry]
#        - shift: [-hx/2+rx, -hy/3+ry/2]
#        - shift: [-hx/2,  hy/3]
        - shift: [0, -4hy/3+2ry]
        - shift: [-hx+rx, 2hy/3-ry/2]
        - shift: [-hx/2, -hy/3]
        - shift: [-hx/2,  hy/3]
      fillet: fk+kx-rx

  _hexagon:
    - what: polygon
      points:
        - shift: [-hx/2+kx, -hy/3+ky/2]
        - shift: [0, 2.0hy/3-ky]
        - shift: [hx/2-kx, hy/3-ky/2]
        - shift: [hx/2-kx, -hy/3+ky/2]
        - shift: [0, -2.0hy/3+ky]
        - shift: [-hx/2+kx, -hy/3+ky/2]
      fillet: fk
  _hexkey:
    - what: outline
      name: _hexagon
    - what: circle
      radius: 7
      where:
        shift: [0, -2]
      operation: stack
  _m2_nut:
    - what: polygon
      points:
        - shift: [-2.0, -1.155]
        - shift: [0, 2.31]
        - shift: [2.0, 1.155]
        - shift: [2.0, -1.155]
        - shift: [0, -2.31]
        - shift: [-2.0, -1.155]
      fillet: .6
  _rgb_cutout:
    - what: rectangle
      where:
        shift: [0, 4.7]
      size: [3.2, 3.2]
      fillet: 0.4
  _switch_cutout1:
    - what: rectangle
      size: [13.8, 13.8]
      fillet: 0.6
  _mcu_cutout:
    - what: rectangle
      size: [17.78 + 1, 33.02 + 1]
      where:
        ref: thumb_c1_rt
        shift: [9hx/2+dx/2, mcu_top-16.51]
      fillet: 0.5
  _header_cutout:
    - what: polygon
      points:
        # 1.5mm higher
        - ref: thumb_c3_rt
          shift: [hx/2-kx, 5hy/3+ky/2+dy/2]
        - shift: [0, 2hy/3+dy/2-ky+1.5]
        #- shift: [hx/2-kx+dx/2, hy/3-ky/2+dx/4]
        #- shift: [hx/2-kx+dx/2, -hy/3+ky/2-dx/4]
        - shift: [hx+dx+2kx, 0]
        - shift: [0, -2hy/3-dy/2+ky-1.5]
        #- shift: [-hx/2+kx-dx/2, -hy/3+ky/2-dx/4]
    - what: rectangle
      size: [hx, wc]
      where: [thumb_c3_rt]
      asym: both
      adjust:
        shift: [hx/4+3*1.1547, 3hy/2]
        rotate: -60
      operation: subtract
      fillet: 1
  _sound_holes:
    - what: circle
      radius: wc/2
      where: [top_c4_r3, home_c4_r2,
              bottom_c4_r1, bottom_c5_r1,
              thumb_c4_rt, thumb_c5_rt]
      asym: both
  _main_cutouts:
    - what: outline
      name: _mcu_cutout
    - what: outline
      name: _sound_holes

  _linear_channel_1u:
    - what: rectangle
      size: [hx+0.01, wc]
    - what: circle
      radius: wc/2
      where:
        shift: [-hx/2, 0]
      operation: add
    - what: circle
      radius: wc/2
      where:
        shift: [hx/2, 0]
      operation: add
  _linear_channel_1u_dx:
    - what: rectangle
      size: [hx+dx+0.01, wc]
    - what: circle
      radius: wc/2
      where:
        shift: [(hx+dx)/2, 0]
      operation: add
  _linear_channel_2u:
    - what: rectangle
      size: [2hx+0.01, wc]
    - what: circle
      radius: wc/2
      where:
        shift: [-hx, 0]
      operation: add
    - what: circle
      radius: wc/2
      where:
        shift: [hx, 0]
      operation: add
  _linear_channel_3u:
    - what: rectangle
      size: [3hx+0.01, wc]
    - what: circle
      radius: wc/2
      where:
        shift: [-3hx/2, 0]
      operation: add
    - what: circle
      radius: wc/2
      where:
        shift: [3hx/2, 0]
      operation: add
  _linear_channel_dy:
    - what: rectangle
      size: [wc, dy+0.01]
      where:
        shift: [0, dy/2]
    - what: circle
      radius: wc/2
      operation: add
  _arc_channel_1u:
    - what: circle
      radius: 2hy/3 + wc/2
    - what: circle
      radius: 2hy/3 - wc/2
      operation: subtract
    - what: polygon
      points:
        - shift: [0, 0]
        - shift: [-2hy, hx]
        - shift: [4hy, 0]
      operation: intersect
  _arc_channel_2u:
    - what: circle
      radius: 2hy/3 + wc/2
    - what: circle
      radius: 2hy/3 - wc/2
      operation: subtract
    - what: polygon
      points:
        - shift: [0, 0]
        - shift: [-2hy, hx]
        - shift: [4hy, 0]
      operation: subtract
  _sound_channel_main_alt:
    - what: outline
      name: _linear_channel_3u
      where: [f_c1_r3, f_c1_r2]
      asym: both
      adjust:
        - shift: [hx/2, 0]
    - what: outline
      name: _linear_channel_2u
      where: [f_c2_r1]
      asym: both
      adjust:
        - shift: [0, 0]
    - what: outline
      name: _linear_channel_1u
      where: [f_c3_r0]
      asym: both
      adjust:
        - shift: [-hx/2, 0]
    - what: outline
      name: _linear_channel_1u
      where: [t_c2_r1, t_c3_r2]
      asym: both
      adjust:
        - shift: [-hx/4, -hy/2]
        - rotate: 60
    - what: outline
      name: _linear_channel_1u
      where: [f_c3_r3, f_c3_r2, f_c3_r1, f_c3_r0]
      asym: both
      adjust:
        - shift: [hx/4, -hy/2]
        - rotate: 120
    - what: outline
      name: _linear_channel_dy
      where: [t_c1_r1]
      asym: both
    - what: outline
      name: _arc_channel_1u
      where: [f_c0_r3]
      asym: both
      adjust:
        - shift: [0, -2hy/3]
        - rotate: 60
    - what: outline
      name: _arc_channel_1u
      where: [f_c1_r1]
      asym: both
      adjust:
        - shift: [hx/2, -hy/3]
        - rotate: 120
    - what: outline
      name: _arc_channel_1u
      where: [t_c3_r1]
      asym: both
      adjust:
        - shift: [-hx/2, hy/3]
        - rotate: 180
  _sound_channel_main:
    - what: outline
      name: _arc_channel_1u
      where: [f_c0_r3, f_c2_r3]
      asym: both
      adjust:
        - shift: [hx/2, -hy/3]
    - what: outline
      name: _arc_channel_1u
      where: [f_c1_r1]
      asym: both
      adjust:
        - shift: [hx/2, -hy/3]
        - rotate: 120
    - what: outline
      name: _arc_channel_1u
      where: [f_c1_r2]
      asym: both
      adjust:
        - shift: [-hx/2, hy/3]
        - rotate: 60
    - what: outline
      name: _linear_channel_1u
      where: [f_c3_r3, f_c1_r2, f_c3_r0]
      asym: both
      adjust:
        - shift: [hx/4, -hy/2]
        - rotate: -60
    - what: outline
      name: _linear_channel_2u
      where: [f_c3_r2]
      asym: both
      adjust:
        - rotate: -60
    - what: outline
      name: _linear_channel_3u
      where: [f_c2_r2]
      asym: both
      adjust:
        - shift: [hx/4, -hy/2]
        - rotate: -60
    - what: outline
      name: _linear_channel_1u
      where: [f_c1_r2, f_c2_r1, f_c3_r0]
      asym: both
      adjust:
        - shift: [-hx/2, 0]
    - what: outline
      name: _linear_channel_dy
      where: [t_c1_r1]
      asym: both
    - what: outline
      name: _linear_channel_1u
      where: [t_c2_r1, t_c3_r2]
      asym: both
      adjust:
        - shift: [-hx/4, -hy/2]
        - rotate: 60
    - what: outline
      name: _arc_channel_1u
      where: [t_c3_r1]
      asym: both
      adjust:
        - shift: [-hx/2, hy/3]
        - rotate: 180
    - what: circle
      radius: wc/2
      where: [f_c0_r3]
      asym: both
      fillet: 1
  _sound_channel_raised_common:
    - what: outline
      name: _linear_channel_1u
      where: [f_c5_r2, t_c2_r1, t_c3_r2]
      asym: both
      adjust:
        shift: [-hx/4, hy/2]
        rotate: -60
    - what: outline
      name: _linear_channel_dy
      where: [f_c4_r1, f_c5_r2]
      asym: both
      adjust:
        rotate: 180
      fillet: 1
    - what: circle
      radius: wc/2
      where: [t_c1_r1]
      asym: both
    - what: rectangle
      size: [wc, wc/3]
      where: [t_c1_r1]
      asym: both
      adjust:
        shift: [-wc/2, 0]
    - what: rectangle
      size: [wc, wc]
      where: [t_c1_r1]
      asym: both
      adjust:
        shift: [-hx/2-wc/2+kx, 0]
      fillet: (hx-wc)/4
  _sound_channel_raised:
    - what: outline
      name: _linear_channel_1u
      where: [f_c5_r3]
      asym: both
      adjust:
        shift: [-hx/4, hy/2]
        rotate: -60
    - what: outline
      name: _sound_channel_raised_common
  _sound_channel_raised_asym:
    - what: outline
      name: _linear_channel_1u
      where: [f_c5_r3]
      asym: left
      adjust:
        shift: [-hx/4, hy/2]
        rotate: -60
    - what: outline
      name: _linear_channel_1u_dx
      where: [f_c5_r3]
      asym: left
      adjust:
        shift: [(hx+dx)/2, 0]
      fillet: 1
    - what: circle
      radius: wc/2
      where: [f_c4_r3]
      asym: right
    - what: outline
      name: _sound_channel_raised_common

  base:
    - what: outline
      name: _main
    - what: circle
      radius: 1.1
      where: [mount_base1_r, mount_base2_r, mount_base3_r, mount_raise1_r, mount_raise2_r, mount_raise3_r]
      asym: both
      operation: subtract
  main_split:
    - what: outline
      name: _main
    - what: outline
      name: _rgb_cutout
      where: [top_c1_r3, top_c2_r3, top_c3_r3,
              home_c1_r2, home_c2_r2, home_c3_r2,
              bottom_c1_r1, bottom_c2_r1, bottom_c3_r1,
              thumb_c1_rt, thumb_c2_rt, thumb_c3_rt,
              extra_c1_re, extra_c2_re, extra_c3_re]
      operation: subtract
    - what: outline
      name: _main_cutouts
      operation: subtract
    - what: rectangle
      size: [9hx+dx, 9hy]
      where:
        ref: thumb_c1_rt
        shift: [0, -3hy]
      operation: intersect
  raised:
    - what: outline
      name: _raised
    - what: outline
      name: _rgb_cutout
      where: [top_c4_r3, top_c5_r3,
              home_c4_r2, home_c5_r2,
              bottom_c4_r1, bottom_c5_r1,
              thumb_c4_rt, thumb_c5_rt]
      asym: both
      operation: subtract
  plate_main:
    - what: outline
      name: _main
    - what: outline
      name: _switch_cutout1
      where: [top_c1_r3, top_c2_r3, top_c3_r3,
              home_c1_r2, home_c2_r2, home_c3_r2,
              bottom_c1_r1, bottom_c2_r1, bottom_c3_r1,
              thumb_c1_rt, thumb_c2_rt, thumb_c3_rt,
              extra_c1_re, extra_c2_re, extra_c3_re]
      asym: both
      operation: subtract
    - what: outline
      name: _main_cutouts
      operation: subtract
    - what: outline
      name: _header_cutout
      operation: subtract
    - what: outline
      name: _m2_nut
      where: [mount_base1_r, mount_base2_r, mount_base3_r]
      asym: both
      operation: subtract
    - what: circle
      radius: 1.6
      where: [mount_raise1_r, mount_raise2_r, mount_raise3_r]
      asym: both
      operation: subtract
  plate_main_split:
    - what: outline
      name: _main
    - what: rectangle
      size: [9hx+dx, 9hy]
      where:
        ref: thumb_c1_rt
        shift: [0, -3hy]
      operation: intersect
    - what: outline
      name: _switch_cutout1
      where: [top_c1_r3, top_c2_r3, top_c3_r3,
              home_c1_r2, home_c2_r2, home_c3_r2,
              bottom_c1_r1, bottom_c2_r1, bottom_c3_r1,
              thumb_c1_rt, thumb_c2_rt, thumb_c3_rt,
              extra_c1_re, extra_c2_re, extra_c3_re]
      operation: subtract
    - what: outline
      name: _main_cutouts
      operation: subtract
    - what: outline
      name: _header_cutout
      operation: subtract
    - what: outline
      name: _m2_nut
      where: [mount_base1_r, mount_base2_r, mount_base3_r]
      operation: subtract
    - what: circle
      radius: 1.6
      where: [mount_raise1_r, mount_raise2_r, mount_raise3_r]
      operation: subtract
  plate_raised:
    - what: outline
      name: _raised
    - what: outline
      name: _switch_cutout1
      where: [top_c4_r3, top_c5_r3,
              home_c4_r2, home_c5_r2,
              bottom_c4_r1, bottom_c5_r1,
              thumb_c4_rt, thumb_c5_rt]
      asym: both
      operation: subtract
    - what: outline
      name: _mcu_cutout
      operation: subtract
    - what: outline
      name: _header_cutout
      operation: subtract
    - what: outline
      name: _m2_nut
      where: [mount_raise1_r, mount_raise2_r, mount_raise3_r]
      asym: both
      operation: subtract
  sound_plate_main:
    - what: outline
      name: _main
    - what: outline
      name: _mcu_cutout
      operation: subtract
    - what: outline
      name: _header_cutout
      operation: subtract
    - what: outline
      name: _sound_channel_main
      operation: subtract
    - what: circle
      radius: 1.6
      where: [mount_base1_r, mount_base2_r, mount_base3_r, mount_raise1_r, mount_raise2_r, mount_raise3_r]
      asym: both
      operation: subtract
  sound_plate_main_split:
    - what: outline
      name: _main
    - what: rectangle
      size: [9hx+dx, 9hy]
      where:
        ref: thumb_c1_rt
        shift: [0, -3hy]
      operation: intersect
    - what: outline
      name: _mcu_cutout
      operation: subtract
    - what: outline
      name: _header_cutout
      operation: subtract
    - what: outline
      name: _sound_channel_main
      operation: subtract
    - what: circle
      radius: 1.6
      where: [mount_base1_r, mount_base2_r, mount_base3_r, mount_raise1_r, mount_raise2_r, mount_raise3_r]
      operation: subtract
  sound_plate_raised:
    - what: outline
      name: _raised
    - what: outline
      name: _mcu_cutout
      operation: subtract
    - what: outline
      name: _header_cutout
      operation: subtract
    - what: outline
      name: _sound_channel_raised
      operation: subtract
    - what: circle
      radius: 1.6
      where: [mount_raise1_r, mount_raise2_r, mount_raise3_r]
      asym: both
      operation: subtract
  sound_plate_raised_asym:
    - what: outline
      name: _raised
    - what: outline
      name: _mcu_cutout
      operation: subtract
    - what: outline
      name: _header_cutout
      operation: subtract
    - what: outline
      name: _sound_channel_raised_asym
      operation: subtract
    - what: circle
      radius: 1.6
      where: [mount_raise1_r, mount_raise2_r, mount_raise3_r]
      asym: both
      operation: subtract
  composite_keys:
    - what: outline
      name: _main
    - what: outline
      name: _mcu_cutout
      operation: subtract
    - what: outline
      name: _raised
      where:
        shift: [0, 0.01]
      operation: stack
    - what: outline
      name: _hexkey
      where: [top_c1_r3, top_c2_r3, top_c3_r3, top_c4_r3, top_c5_r3,
              home_c1_r2, home_c2_r2, home_c3_r2, home_c4_r2, home_c5_r2,
              bottom_c1_r1, bottom_c2_r1, bottom_c3_r1, bottom_c4_r1, bottom_c5_r1,
              thumb_c1_rt, thumb_c2_rt, thumb_c3_rt, thumb_c4_rt, thumb_c5_rt,
              extra_c1_re, extra_c2_re, extra_c3_re]
      asym: both
      operation: stack
    - what: outline
      name: _header_cutout
      operation: stack
    - what: outline
      name: _m2_nut
      where: [mount_base1_r, mount_base2_r, mount_base3_r, mount_raise1_r, mount_raise2_r, mount_raise3_r]
      asym: both
      operation: stack
    # Room for a 35mm cirque track pad by sacrificing 2 thumb keys
    #- what: circle
    #  radius: 35/2
    #  where:
    #    shift: [254, -127-hy-dy/2]
    #  operation: stack
  composite_sound:
    - what: outline
      name: _main
      operation: stack
    - what: outline
      name: _sound_channel_main
      operation: subtract
    - what: outline
      name: sound_plate_raised_asym
      where:
        shift: [0, 0.01]
      operation: stack
    - what: circle
      radius: 1.6
      where: [mount_base1_r, mount_base2_r, mount_base3_r, mount_raise1_r, mount_raise2_r, mount_raise3_r]
      asym: both
      operation: stack
  composites:
    - what: outline
      name: composite_keys
      operation: stack
    - what: outline
      name: composite_sound
      where:
        shift: [0, -20hy/3-2dy-2my]
      operation: stack
  plates:
    - what: outline
      name: base
      adjust.shift: [-254, 127]
      where:
        rotate: -120
        shift: [3hx + mx + dy+dx/4, -16hy/3 - mx - dx/2]
      operation: stack
    - what: outline
      name: sound_plate_main
      adjust.shift: [-254, 127]
      where:
        rotate: 60
        shift: [10hx + 3mx + dy+dx/4 + gap, -21hy/3 - mx - dx/2]
      operation: stack
    - what: outline
      name: plate_raised
      adjust.shift: [-254, 127]
      where:
        rotate: 180
        shift: [13hx/2+3dx/2 + gap, -12hy-dx-2mx-gap - 12hy/6-dy]
      operation: stack
    - what: outline
      name: sound_plate_raised
      adjust.shift: [-254, 127]
      where:
        shift: [3hx+dx/2, -12hy-dx-2mx-gap - 5hy-dy-gap]
      operation: stack
    - what: outline
      name: sound_plate_raised
      adjust.shift: [-254, 127]
      where:
        shift: [3hx+dx/2 + 6hx+2dx + hx + 2gap, -12hy-dx-2mx-gap - 5hy-dy-gap]
      operation: stack
    - what: outline
      name: plate_main
      adjust.shift: [-254, 127]
      where:
        rotate: 180
        shift: [13hx/2+3dx/2 + gap, -12hy-dx-2mx-gap - 5hy-dy-gap - 27hy/6-2dy-gap]
      operation: stack
  plates2x:
    - what: outline
      name: plates
      where:
        shift: [10hx+3mx+dy+dx/4+gap + 3hx+mx+dy+dx/4+gap, 0]
    - what: outline
      name: plates
      operation: stack
  plates3x:
    - what: outline
      name: plates2x
      where:
        shift: [10hx+3mx+dy+dx/4+gap + 3hx+mx+dy+dx/4+gap, 0]
    - what: outline
      name: plates
      operation: stack

pcbs:
  plate_main_split:
    outlines:
      main:
        outline: plate_main_split

  plate_raised:
    outlines:
      main:
        outline: plate_raised

  sound_plate_main_split:
    outlines:
      main:
        outline: sound_plate_main_split

  sound_plate_raised:
    outlines:
      main:
        outline: sound_plate_raised

  mantis_reversible_split:
    outlines:
      main:
        outline: main_split
      raised:
        outline: _raised
        layer: Dwgs.User
      headers:
        outline: _header_cutout
        layer: Dwgs.User
      sound_main:
        outline: _sound_channel_main
        layer: Eco1.User
      sound_raised:
        outline: _sound_channel_raised
        layer: Eco2.User
    footprints:
      keys:
        what: choc
        where: [top_c1_r3, top_c2_r3, top_c3_r3,
                home_c1_r2, home_c2_r2, home_c3_r2,
                bottom_c1_r1, bottom_c2_r1, bottom_c3_r1,
                thumb_c1_rt, thumb_c2_rt, thumb_c3_rt,
                extra_c1_re, extra_c2_re, extra_c3_re]
        adjust:
          rotate: 180
        params:
          from: "{{column_net}}"
          to: "{{colrow}}"
          keycaps: false
          hotswap: false
          reverse: true
      diodes:
        what: diode
        where: [top_c1_r3, top_c2_r3, top_c3_r3,
                home_c1_r2, home_c2_r2, home_c3_r2,
                bottom_c1_r1, bottom_c2_r1, bottom_c3_r1,
                thumb_c1_rt, thumb_c2_rt, thumb_c3_rt,
                extra_c1_re, extra_c2_re, extra_c3_re]
        adjust:
          shift: [0, -3.5]
        params:
          from: "{{colrow}}"
          to: "{{row_net}}"
      row_vias:
        what: via
        where: [top_c1_r3, top_c2_r3, top_c3_r3,
                home_c1_r2, home_c2_r2, home_c3_r2,
                bottom_c1_r1, bottom_c2_r1, bottom_c3_r1,
                thumb_c1_rt, thumb_c2_rt, thumb_c3_rt,
                extra_c1_re, extra_c2_re, extra_c3_re]
        adjust:
          shift: [0, -3.5]
        params:
          net: "{{row_net}}"
      rgb:
        what: rgb
        where: [top_c1_r3, top_c2_r3, top_c3_r3,
                home_c1_r2, home_c2_r2, home_c3_r2,
                bottom_c1_r1, bottom_c2_r1, bottom_c3_r1,
                thumb_c1_rt, thumb_c2_rt, thumb_c3_rt,
                extra_c1_re, extra_c2_re, extra_c3_re]
        adjust.shift: [0, 4.7]
        params:
          side: B
          din: "di_{{colrow}}"
          dout: "do_{{colrow}}"
      din_vias:
        what: via
        where: [top_c1_r3, top_c2_r3, top_c3_r3,
                home_c1_r2, home_c2_r2, home_c3_r2,
                bottom_c1_r1, bottom_c2_r1, bottom_c3_r1,
                thumb_c1_rt, thumb_c2_rt, thumb_c3_rt,
                extra_c1_re, extra_c2_re, extra_c3_re]
        adjust.shift: [4.2, 4.7]
        params:
          net: "di_{{colrow}}"
      dout_vias:
        what: via
        where: [top_c1_r3, top_c2_r3, top_c3_r3,
                home_c1_r2, home_c2_r2, home_c3_r2,
                bottom_c1_r1, bottom_c2_r1, bottom_c3_r1,
                thumb_c1_rt, thumb_c2_rt, thumb_c3_rt,
                extra_c1_re, extra_c2_re, extra_c3_re]
        adjust.shift: [-4.2, 4.7]
        params:
          net: "do_{{colrow}}"
      # Pads as place holders for mounting points
      mount:
        what: pad
        where: [mount_base1_r, mount_base2_r, mount_base3_r, mount_raise1_r, mount_raise2_r, mount_raise3_r]
        params:
          net: GND
      # Promicro as place holder for headers
      header:
        what: promicro
        where: [mount_header_r]
        params:
          orientation: up
          P0: R2
          P1: R3
          P2: R1
          P3: RT
          P4: C1
          P5: C2
          P6: C3
          P7: VCC
          P8: di_c3_r3
          P9: do_c3_rt

  mantis_raised:
    outlines:
      raised:
        outline: raised
      mcu:
        outline: _mcu_cutout
        layer: Dwgs.User
      headers:
        outline: _header_cutout
        layer: Dwgs.User
      sound_raised:
        outline: _sound_channel_raised
        layer: Eco2.User
    footprints:
      keys:
        what: choc
        where: [top_c4_r3, top_c5_r3,
                home_c4_r2, home_c5_r2,
                bottom_c4_r1, bottom_c5_r1,
                thumb_c4_rt, thumb_c5_rt]
        asym: both
        adjust:
          rotate: 180
        params:
          from: "{{column_net}}"
          to: "{{colrow}}"
          keycaps: false
          hotswap: false
      diodes:
        what: diode
        where: [top_c4_r3, top_c5_r3,
                home_c4_r2, home_c5_r2,
                bottom_c4_r1, bottom_c5_r1,
                thumb_c4_rt, thumb_c5_rt]
        asym: both
        adjust:
          shift: [0, -3.5]
        params:
          from: "{{colrow}}"
          to: "{{row_net}}"
      mcu:
        what: promicro
        where:
          ref: thumb_c1_rt
          shift: [9hx/2+dx/2, mcu_top - 17.78]
          rotate: -90
        params:
          orientation: up
          P0: R2
          P1: R3
          P2: R1
          P3: RT
          P4: C1
          P5: C2
          P6: C3
          P7: C4
          P8: C5
          P9: LED
          P14: M_C4
          P15: M_C3
          P16: M_C5
          P18: M_C2
          P19: M_C1
          RAW: VCC
          VCC: 3_3V
      reset:
        what: button
        where:
          ref: thumb_c1_rt
          shift: [9hx/2+dx/2, mcu_top-7]
        params:
          side: F
          from: GND
          to: RST
      rgb:
        what: rgb
        where: [top_c4_r3, top_c5_r3,
                home_c4_r2, home_c5_r2,
                bottom_c4_r1, bottom_c5_r1,
                thumb_c4_rt, thumb_c5_rt]
        adjust.shift: [0, 4.7]
        asym: both
        params:
          side: B
          din: "di_{{colrow}}"
          dout: "do_{{colrow}}"
      # Pads as place holders for mounting points
      mount:
        what: pad
        where: [mount_raise1_r, mount_raise2_r, mount_raise3_r]
        asym: both
        params:
          net: GND
      # Promicro as place holder for headers
      header:
        what: promicro
        where: [mount_header_r]
        params:
          orientation: up
          P0: R2
          P1: R3
          P2: R1
          P3: RT
          P4: C1
          P5: C2
          P6: C3
          P7: VCC
          P8: do_c5_r2
          P9: di_mirror_c3_r3
          P10: di_mirror_c3_r3
          P14: R1
          P15: M_C3
          P16: RT
          P18: M_C2
          P19: M_C1
          P20: R2
          P21: R3

